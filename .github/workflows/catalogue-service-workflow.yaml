name: catalogue-service 

on:
  push:
    branches:
      - main
    paths:
      - './catalogue-service/**' 
      - '.github/workflows/**'
      - './kubernetes/catalogue-service/**'

defaults:
  run:
    working-directory: ./catalogue-service

jobs:
  unit-tests_feature-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate Key
        run: php artisan key:generate
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
        
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate Key
        run: php artisan key:generate
      - name: Run Larastan Code analysis
        run: vendor/bin/phpstan analyse

  Dependency-security-tests-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate Key
        run: php artisan key:generate
      - name: Run Depenedency security tests
        run: vendor/bin/security-checker security:check composer.lock
      
  
  dockerize:
    runs-on: ubuntu-latest
    needs: [ unit-tests_feature-tests, code-review]
    steps: 
      - uses: actions/checkout@v1
      - name: Create .env file
        run: echo "${{ secrets.CATALOGUE_SERVICE_ENV_FILE }}" > .env
      - name: Login into DockerHub
        run: docker login -u molotovhammr -p "${{ secrets.DOCKER_LOGIN }}"
      - name: Create image
        run: docker build . -t molotovhammr/catalogue-service:latest
      - name: Push image
        run: docker push molotovhammr/catalogue-service:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [dockerize]
    steps:
    - name: Checkout master 
      uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 grocio-cluster     
    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f ${{ github.workspace }}/kubernetes/catalogue-service/   
    - name: Verify deployments
      run: kubectl rollout status deployment/catalogue  

      


