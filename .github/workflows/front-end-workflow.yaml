name: front-end service

on:
  push:
    branches:
      - main
    paths:
      - 'front-end/**' 
      - '.github/workflows/**'
      - 'kubernetes/shopping-list-service/**'

defaults:
  run:
    working-directory: ./front-end  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Create .env file
        run: echo "${{ secrets.FRONT_END_ENV_FILE }}" > .env
      - name: Node install
        run: npm install
      - name: Build front-end
        run: npm run build
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Start front-end
      run: nohup npm run dev &
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  dockerize:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps: 
      - uses: actions/checkout@v1
      - name: Create .env file
        run: echo "${{ secrets.FRONT_END_ENV_FILE }}" > .env
      - name: Login into DockerHub
        run: docker login -u molotovhammr -p "${{ secrets.DOCKER_LOGIN }}"
      - name: Create image
        run: docker build . -t molotovhammr/front-end:latest
      - name: Push image
        run: docker push molotovhammr/front-end:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [dockerize]
    steps:
    - name: Checkout master 
      uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 grocio-cluster     
    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f ${{ github.workspace }}/kubernetes/front-end/ 
    - name: Update image of pods
      run: kubectl rollout restart deployment/front-end
    - name: Verify deployments
      run: kubectl rollout status deployment/front-end  